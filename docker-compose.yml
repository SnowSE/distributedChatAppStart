services:
  client:
    build: 
      context: .
      dockerfile: dev.Dockerfile
    command: dotnet run --project Client
    ports:
      - 8080:8080
    environment:
      - MESSAGE_API_URL=http://api:8080
      - IMAGE1_API_URL=http://localhost:8888 # nginx

  api:
    build:
      context: .
      dockerfile: dev.Dockerfile
    command: dotnet run --project Api
      - CONNECTION_STRING=Server=db;Database=chatdb;Userid=chatuser;Password=asoienwoafin;
    environment:
      - IMAGE1_API_URL=http://imageapi1:8080

  imageapi1:
    build:
      context: .
      dockerfile: dev.Dockerfile
    ports:
      - 8081:8080
    command: dotnet run --project Api
      - CONNECTION_STRING=Server=db;Database=chatdb;Userid=chatuser;Password=asoienwoafin;
    volumes:
      - images1:/app/Api/wwwroot/images

  imageapi2:
    build:
      context: .
      dockerfile: dev.Dockerfile
    ports:
      - 8082:8080
    command: dotnet run --project Api
      - CONNECTION_STRING=Server=db;Database=chatdb;Userid=chatuser;Password=asoienwoafin;
    volumes:
      - ./data/images2:/app/Api/wwwroot/images

  # imageApi:
  #   build:
  #     context: .
  #     dockerfile: dev.Dockerfile
  #   command: dotnet run --project ImageApi
  #   volumes:
  #     - image_api_data1:/app/ImageApi/wwwroot/images

  db:
    image: postgres:16
    environment:
      - POSTGRES_DB=chatdb
      - POSTGRES_USER=chatuser
      - POSTGRES_PASSWORD=asoienwoafin
    volumes:
      - postgres_data:/var/lib/postgresql/data
      - ./init.sql:/docker-entrypoint-initdb.d/init.sql

  nginx:
    image: nginx
    ports:
      - 8888:80
      # - 8889:8081
    volumes:
      - ./chat-nginx-default.conf:/etc/nginx/conf.d/default.conf

volumes:
  postgres_data:
  image_api_data1:
  images1:
  images2: